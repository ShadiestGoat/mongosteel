var __awaiter=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function d(t){try{s(o.next(t))}catch(t){r(t)}}function c(t){try{s(o.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(d,c)}s((o=o.apply(t,e||[])).next())}))};import{mongoSteelConnection}from"./connection";import{MongoSteelValidityError}from"./schema";class trueModel{constructor(t,e,n,o){const i=e.validate(n);if(!i.valid&&!mongoSteelConnection.opts.noVerification)throw new MongoSteelValidityError(i);this.doc=i.valid?i.res:n,this.schema=e,this.saved=!1,this.oldId="",this.methods=o;const r=setInterval((function(){mongoSteelConnection.on&&(clearInterval(r),this.collection=mongoSteelConnection.db.collection(t))}),100)}save(){return __awaiter(this,void 0,void 0,(function*(){!mongoSteelConnection.opts.noIdDetection&&this.saved&&this.oldId==this.doc._id&&(console.warn(`The _id ${this.doc._id} has already been saved once, overriding it with a new id...\nTo avoid this, use mongoSteel option { noIdDetection:true }`),delete this.doc._id);const t=yield this.collection.insertOne(this.doc);if(!t.insertedId)throw Error("Not inserted");if(!mongoSteelConnection.opts.noDocsUpdate){const e=yield this.collection.findOne({_id:t.insertedId});if(!e)throw Error("Weird");this.doc=e}return this.saved=!0,this.oldId=t.insertedId,this.doc}))}static find(t){return __awaiter(this,void 0,void 0,(function*(){return yield this.collection.find(t).toArray()}))}static findOne(t){return __awaiter(this,void 0,void 0,(function*(){return yield this.collection.findOne(t)}))}static findOneAndDelete(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.collection.findOneAndDelete(t);if(!e.ok)throw new Error("findOneAndDelete returned not OK");return e.value}))}static findOneAndReplace(t,e){return __awaiter(this,void 0,void 0,(function*(){const n=this.schema.validate(e);if(!n.valid)throw new MongoSteelValidityError(n);e=n.res;const o=yield this.collection.findOneAndReplace(t,e);if(!o.ok)throw new Error("findOneAndReplace returned not OK");return o.value}))}static findOneAndUpdate(t,e){return __awaiter(this,void 0,void 0,(function*(){const n=this.schema.validate(e,{ignoreDefault:!0,ignoreRequired:!0});if(!n.valid)throw new MongoSteelValidityError(n);const o=yield this.collection.findOneAndUpdate(t,{$set:e});if(!o.ok)throw new Error("findOneAndUpdate returned not OK");return o.value}))}static deleteMany(t){return __awaiter(this,void 0,void 0,(function*(){yield this.collection.deleteMany(t)}))}}export function model(t,e,n){class o extends trueModel{constructor(o={}){super(t,e,o,n)}}const i=setInterval((function(){mongoSteelConnection.on&&(clearInterval(i),o.collection=mongoSteelConnection.db.collection(t))}),100);return o.schema=e,o.methods=n,o}